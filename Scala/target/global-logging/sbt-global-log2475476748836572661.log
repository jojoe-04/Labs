[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Amazon.com Inc. Java 11.0.12)
[debug]       Load.loadUnit: plugins took 102.8626ms
[debug]       Load.loadUnit: defsScala took 0.258ms
[debug] [Loading] Scanning directory C:\Users\User\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.4835 ms
[debug]           Load.resolveProject(global-plugins) took 57.1252ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\User\.sbt\1.0\plugins, plugins: List(<none>))) took 108.8874ms
[debug] [Loading] Done in C:\Users\User\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 128.3084ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1878ms
[debug]     Load.loadUnit(file:/C:/Users/User/.sbt/1.0/plugins/, ...) took 240.5651ms
[debug]   Load.apply: load took 427.1369ms
[debug]   Load.apply: resolveProjects took 6.5123ms
[debug]   Load.apply: finalTransforms took 54.515ms
[debug]   Load.apply: config.delegates took 7.2014ms
[debug]   Load.apply: Def.make(settings)... took 473.9296ms
[debug]   Load.apply: structureIndex took 104.9438ms
[debug]   Load.apply: mkStreams took 1.5581ms
[info] loading global plugins from C:\Users\User\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4879.8835ms
[debug]           Load.loadUnit: plugins took 18.6261ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Users\User\Desktop\TLC 4\Labs\Scala\project
[debug]             Load.loadUnit: mkEval took 6.4982ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\Desktop\TLC 4\Labs\Scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4446 ms
[info] loading settings for project scala-build from idea.sbt ...
[debug]               Load.resolveProject(scala-build) took 2.6659ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-build, base: C:\Users\User\Desktop\TLC 4\Labs\Scala\project, plugins: List(<none>))) took 4.6535ms
[debug] [Loading] Done in C:\Users\User\Desktop\TLC 4\Labs\Scala\project, returning: (scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2269.9342ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.4004ms
[debug]         Load.loadUnit(file:/C:/Users/User/Desktop/TLC%204/Labs/Scala/project/, ...) took 2293.8162ms
[debug]       Load.apply: load took 2295.2249ms
[debug]       Load.apply: resolveProjects took 0.1018ms
[debug]       Load.apply: finalTransforms took 9.3811ms
[debug]       Load.apply: config.delegates took 0.4406ms
[debug]       Load.apply: Def.make(settings)... took 74.5432ms
[debug]       Load.apply: structureIndex took 21.7193ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\Users\User\Desktop\TLC 4\Labs\Scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4530.7996ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\User\Desktop\TLC 4\Labs\Scala
[debug]       Load.loadUnit: mkEval took 0.2619ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\Desktop\TLC 4\Labs\Scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.7819 ms
[info] loading settings for project scala from build.sbt ...
[debug]         Load.resolveProject(scala) took 56.59ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scala, base: C:\Users\User\Desktop\TLC 4\Labs\Scala, plugins: List(<none>))) took 64.8414ms
[debug] [Loading] Done in C:\Users\User\Desktop\TLC 4\Labs\Scala, returning: (scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 1022.0834ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.2401ms
[debug]   Load.loadUnit(file:/C:/Users/User/Desktop/TLC%204/Labs/Scala/, ...) took 5565.8977ms
[debug] Load.apply: load took 5573.5871ms
[debug] Load.apply: resolveProjects took 0.1735ms
[debug] Load.apply: finalTransforms took 56.7961ms
[debug] Load.apply: config.delegates took 0.9882ms
[debug] Load.apply: Def.make(settings)... took 112.0514ms
[debug] Load.apply: structureIndex took 27.5001ms
[debug] Load.apply: mkStreams took 0.0047ms
[info] set current project to Monday (in build file:/C:/Users/User/Desktop/TLC%204/Labs/Scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58950 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58950, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Monday (in build file:/C:/Users/User/Desktop/TLC%204/Labs/Scala/)
[debug] > Exec(idea-shell, None, None)
