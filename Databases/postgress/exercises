
select current_date;

select current_time; 

select current_timestamp; 

select to_date('2018-09-26', 'YY-MM-DD');

select to_timestamp('2018 09 26', 'YYYY-MM-DD');
--
--select DATE_PART('2018-09-26'::date); 
---- DATE_PART('2018-12-25'::date)
select to_timestamp('2018 09 26', 'YYYY-MM-DD');

select (CAST(MAX('2018-12-25') AS date) - CAST(MIN('2018-09-26') AS date));

select extract(day from '2018-12-25'::timestamp - '2018-09-26'::timestamp) as dateDifference;

select * from pubs2.titles;

select extract(year from pubdate) from pubs2.titles t;

-- Exercises 
select extract(day from current_timestamp - '2011-01-01'::timestamp);


--In a SELECT-statement, add the difference between 2011-01-01 and the current date to the sales date field in the sales table.
select timestampadd(DAY,extract(day from current_timestamp - '2011-01-01'::timestamp),ord_date)
from pubs2.sales s ;

select 
to_char(ord_date,'dd-mm-yy') as originalDate, 
to_char((ord_date + interval '1 day' * extract(day from current_timestamp - '2011-01-01'::timestamp)),'dd-mm-yy') as newDate
from pubs2.sales s;


--Show how many days remain between now and Thanksgiving and/or Christmas and/or New Years Day.
select
extract(day from '2021-12-25'::timestamp - current_timestamp ) as "Days to Christmas Day",
extract(day from '2021-12-31'::timestamp - current_timestamp ) as "Days to New Years Eve",
extract(day from '2021-11-25'::timestamp - current_timestamp ) as "Days to Thanksgiving";


--Show how old you are as a number of days - you don't have to be too honest about your year of birth if you are over 25 
select
date_part('year', age(timestamp '1997-04-21'))::int

--For each of the publication dates in titles, display the difference between the pubdate and the current date in days as an integer.
select
pubdate::timestamp,
current_timestamp, 
extract(day from current_timestamp - pubdate::timestamp)::int as "PubFromCurrent"
from pubs2.titles t 

--From the sales table convert the date field to dd/mm/yy format
select
to_char(ord_date,'dd/mm/yy') as "newDateFormat"
from pubs2.sales s ;

--select from the sales table stor_id for sales on your birthday in "dd/mm/yy" format. 
--If there are none, then pick sales for the date nearest to your birthdate.
--Search again for before your birthday

select * from pubs2.sales;


select to_char(ord_date,'dd/mm/yy') as "newDateFormat",
case when extract(year from ord_date) = 1997 then 'birthday' 
when (1994 = extract(year from ord_date)) or (1995 = extract(year from ord_date)) then 'close'
end
from pubs2.sales s ;


--Study the reference documents for your DBMS and 
--then display each book title with its publication date converted to the correct format for each of the following regions:
--USA
--UK
--Japan
select title, to_char(pubdate, 'MM/DD/YYYY') as "USA format",
	to_char(pubdate, 'DD/MM/YYYY') as "UK format",
	to_char(pubdate, 'YYYY/MM/DD') as "Japan format"
	from pubs2.titles;


--Show the first word of each title.
select title, 
substring(title,1,position(' ' in title)) as "firstword"
from pubs2.titles;



select size(pubs2.authors)


--Replace the first space in the address field in the authors table with the word 
--hello--

select address, 
replace (address, ' ', '--hello--') as "new address" 
from pubs2.authors

--Provide a randomly generated price for all titles lacking a price in the titles table. (math functions)
select price,
coalesce(price, round((random()*100)::numeric, 2)::money) as new_prices
from pubs2.titles

--Print all phone numbers from the authors table without the three digit area code
select * from pubs2.authors a 

select phone,
substring(phone, position(' ' in phone)) as "withoutPhonecode" 
from pubs2.authors;

--select au_lname,
--reverse(substring(reverse(phone),2))
--from pubs2.authors a ;

--Capitalise the second character in all last names from the authors table.
select au_lname,
left(au_lname ,1) || upper(substring(au_lname,2,1))::varchar || right (au_lname,-2)
from pubs2.authors a ;

--select length(au_lname), character_length(au_lname), max
--from pubs2.authors a ;